<h2>Editing <%= params[:controller].classify.to_s %> Match <%= @match.match_number %> for <%= @team.team_name %></h2>

<%=  form_for([@team, @match], :html => {:autocomplete => :off, :onsubmit => "return validate();"}) do |f| %>
<%= errors_for(@match).html_safe %>
<p><b><%= label("match",:match_number) %></b> <%= f.text_field :match_number %></p>
<p><b><%= label("match", :table_number) %></b> <%= f.text_field :table_number %></p>

<table style="border-collapse:collapse;" border="1">
  <%= fields_for :results do |match_fields| 
		$challenge.missions.each do |mission| -%>
	<tr><td rowspan="<%= mission.items.length %>"><b><%= mission.description.html_safe -%></b></td>
	<% mission.items.each do |item|
		max_length = 2
		allowed_values=item.allowed_values
		if allowed_values.class != Range
			allowed_values = "Y/N"
			max_length = 1
		end
		value = @match.results[item.label]
		input_type = $challenge.type_of(item.label)
		if input_type == :range
			val_func = "return validate_range(#{allowed_values.max});"
		elsif input_type == :boolean
			val_func = "return validate_boolean();"
			value = ["N","Y"][value]
		end

		select_tag = ""
		if item.allowed_values.class == Range
			select_tag = match_fields.select(item.label, item.allowed_values, {:selected => value})
		else
			select_tag = match_fields.select(item.label, {"No" => "N", "Yes" => "Y"}, {:selected => value})
		end
		 -%>

		<td><%= item.description %></td><td><%= select_tag %><%= render partial: "choices" , object: item %> </td>
	</tr>	
		
<%		end	
	end
  end %>
</table>
<%= f.submit "Submit" %>
<%  end -%>